# GCP Project ID
project:  gcsb-324823

# Spanner Instance ID
instance: gcsb-test-1

# Spanner Database Name
database: gcsb-test-db-11

# Number of threads (goroutines) used to generate load
threads: 10

# Number of GCP connections to establish to spanner
num_conns: 10

# Spanner Connection Pool Settings
pool:
  # MaxOpened is the maximum number of opened sessions allowed by the session pool
  max_opened: 1000
  # MinOpened is the minimum number of opened sessions that the session pool tries to maintain
  min_opened: 100
  # MaxIdle is the maximum number of idle sessions that are allowed in the session pool
  max_idle: 0
  # WriteSessions is the fraction of sessions we try to keep prepared for write
  write_sessions: 0.2
  # HealthCheckWorkers is number of workers used by health checker for this pool
  healthcheck_workers: 10
  # HealthCheckInterval is how often the health checker pings a session
  # Values such as "300ms", "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
  healthcheck_interval: 50m
  # TrackSessionHandles determines whether the session pool will keep track
  # of the stacktrace of the goroutines that take sessions from the pool
  track_session_handles: false

# Maximum execution time. If set, we will run until we hit operation count, or this time limit. Whichever comes first.
# Values such as "300ms", "-1.5h" or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
max_execution_time: 1h

# Total number of operations
operations: 1000

# If table exists, we will detect the column types of the table and use DEFAULT data generators
# Here is where you can override those generators
tables:
  - name: SingleSingers
    row_count: 1000
    operations:
      read: 25
      write: 75
  - name: TestGCSB1
    row_count: 1000
    operations:
      read: 25
      write: 75
    columns:
      - name: SingerID
        type: STRING(1024)
        generator:
          type: hexadecimal
          length: 100
          prefix_length: 10
          key_range:
            start: AAAAAAAAAA
            end: ZZZZZZZZZZ
      - name: FullName
        type: STRING(1024)
        generator:
          type: string
          length: 40
      - name: Age
        type: INT64
        generator:
          type: int64
          length: 100
